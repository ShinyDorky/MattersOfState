types mos_reformwindows {
	type MOS_reforms_window = window = {
		name = "MOS_reforms_window"
		datacontext = "[GetVariableSystem]"
		datacontext = "[GetPlayer]"
		parentanchor = vcenter|left
		layer = middle
		size = { 1100 1000 }
		visible = "[And(GetPlayer.IsValid,GetVariableSystem.HasValue('MOS_reforms_open', 'yes')))]"
		using = Window_Background
		using = Window_Decoration_Flat
		
		state = {
			name = _show
			position = { -1040 0 }
			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
			on_start = "[GetVariableSystem.Set('MOS_reforms_open', 'yes')]"
			on_start = "[GetVariableSystem.Set( 'mos_reform_tab', 'military' )]"
		}
		
		state = {
			name = _hide
			position = { 600 0 }
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
			on_start = "[GetVariableSystem.Set('MOS_reforms_open', 'no')]"
		}
		
		container = {
			widget = {
				size = { 1050 960 }
				position = { 25 20 }
				background = {
					texture = "gfx/interface/illustrations/council/bg_council_chancellor.dds"
					spriteborder = { 6 6 }
					shaderfile = "gfx/FX/pdxgui_default.shader"
					alpha = 0.4
				}
				
				vbox = {	# TITLE OF THE WHOLE PAGE
					position = { 0 0 }
					header_pattern = {
						layoutpolicy_horizontal = expanding
					
						minimumsize = { 100% 0 }
					
						blockoverride "header_text"
						{
							text = "MOS_reforms_window"
						}
					
					
						blockoverride "button_close"
						{
							onclick = "[GetVariableSystem.Set('MOS_reforms_open', 'no')]"
						}
					}
				
				
					hbox = {	#Page tabs
						layoutpolicy_horizontal = expanding
				
						button_tab = {
							layoutpolicy_horizontal = expanding
							text = "MOS_REFORMS_MILITARY"
					
							down = "[GetVariableSystem.HasValue( 'mos_reform_tab', 'military' )]"
							onclick = "[GetVariableSystem.Set( 'mos_reform_tab', 'military' )]"
						}
				
						button_tab = {
							layoutpolicy_horizontal = expanding
							text = "MOS_REFORMS_ECONOMIC"
					
							down = "[GetVariableSystem.HasValue( 'mos_reform_tab', 'economy' )]"
							onclick = "[GetVariableSystem.Set( 'mos_reform_tab', 'economy' )]"
						}
				
						button_tab = {
							layoutpolicy_horizontal = expanding
							text = "MOS_REFORMS_ADMINISTRATIVE"
					
							down = "[GetVariableSystem.HasValue( 'mos_reform_tab', 'administration' )]"
							onclick = "[GetVariableSystem.Set( 'mos_reform_tab', 'administration' )]"
						}
					}
			
					vbox = {#MILITARY REFORMS
						visible = "[GetVariableSystem.HasValue( 'mos_reform_tab', 'military' )]"
						layoutpolicy_horizontal = expanding	
			
						vbox = {
							name = "mos_military_reforms_major"
							datamodel = "[MyRealmWindow.GetRealmLaws]"
							ignoreinvisible = yes		
							layoutpolicy_horizontal = expanding		
							item = {
								vbox = {								
									datacontext = "[GuiLawGroup.GetLawGroup]"
									visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'mos_military_reform' ), GuiLawGroup.IsAvailable )]"
									ignoreinvisible = yes
									layoutpolicy_horizontal = expanding	
						
									text_label_center = {		
										visible = "[Not( GuiLawGroup.GetLawGroup.HasFlag( 'mos_minor_reform' ))]"									
										text = "[LawGroup.GetName]"
									}

									spacer = {		
										visible = "[GuiLawGroup.GetLawGroup.HasFlag( 'mos_minor_reform' )]"									
										size = { 0 10 }
									}
						
									hbox = {
										layoutpolicy_horizontal = expanding	
										datamodel = "[GuiLawGroup.GetLaws]"		
										item = {
											vbox = {
												datacontext = "[GuiLaw.GetLaw]"
												visible = "[Not( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER')) )]"
												MOS_reform_spacer = {
													datacontext = "[GuiLaw.GetLaw]"
													visible = "[EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW'))]"
												}
												layoutpolicy_horizontal = expanding	
												MOS_reform_button = {
													datacontext = "[GuiLaw.GetLaw]"
													visible = "[Not( Or( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')), EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER'))) )]"
													#visible = "[Not( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')) )]"
													enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
													down = "[GuiLaw.IsEnacted]"
													alwaystransparent = "[GuiLaw.IsEnacted]"
													onclick = "[GuiLaw.Enact]"
													tooltipwidget = { pass_law_tooltip = {} }
													using = tooltip_below
										
										
										
													MOS_reform_button = {
														visible = "[Not(GuiLaw.IsEnacted)]"
														texture = "gfx/interface/illustrations/loading_screens/baghdad.dds"
														parentanchor = center
														alwaystransparent = yes
													}
										
													MOS_reform_icon = {
														# TODO: Swap for textures when you have them
														visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
														texture = "gfx/interface/illustrations/loading_screens/castle.dds"
														parentanchor = center
														alwaystransparent = yes
											
														blockoverride "master_color_frame" {
															frame = 2
														}
													}
													text_label_center = {
														parentanchor = center
														visible = "[Not( Or( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')), EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER'))) )]"
														text = "[GuiLaw.GetLaw.GetName]"
													}
												}
											}
										}
									}											
								}
							}
						}
					}
		
					expand = {}
				}
			}
		}
	}
}