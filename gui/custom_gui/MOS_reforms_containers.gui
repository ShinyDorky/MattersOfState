types mos_reform_containers{
	type mos_military_reforms_container = vbox {
		name = "mos_military_reforms_major"
		datamodel = "[MyRealmWindow.GetRealmLaws]"
		ignoreinvisible = yes		
		layoutpolicy_horizontal = expanding		
		item = {
			vbox = {								
				datacontext = "[GuiLawGroup.GetLawGroup]"
				visible = "[And(And( GuiLawGroup.GetLawGroup.HasFlag( 'mos_military_reform' ), GuiLawGroup.IsAvailable ), Not(And(EqualTo_string(LawGroup.GetName, Localize('mos_military_reforms_4_header')),And( Not(IsObserver), GetScriptedGui('mos_military_doctrine_locked').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)) )))]"
				ignoreinvisible = yes
				layoutpolicy_horizontal = expanding	
				spacer = {
					visible = "[Not( GuiLawGroup.GetLawGroup.HasFlag( 'mos_minor_reform' ))]"
					size = { 0 30}
				}		
				
				text_label_center = {		
					visible = "[Not( GuiLawGroup.GetLawGroup.HasFlag( 'mos_minor_reform' ))]"									
					text = "[LawGroup.GetName]"
				}
				
				# spacer = {		
				# 	visible = "[GuiLawGroup.GetLawGroup.HasFlag( 'mos_minor_reform' )]"									
				# 	size = { 0 10 }
				# }
				MOS_mil_reforms_colored_spacer = {}
				
				MOS_mil_reforms_background_threaded_hbox = {
					visible = "[Not( GuiLawGroup.GetLawGroup.HasFlag( 'mos_no_order_reform' ))]"
					margin = {5 0}
					layoutpolicy_horizontal = expanding	
					datamodel = "[GuiLawGroup.GetLaws]"
					item = {
						vbox = {
							datacontext = "[GuiLaw.GetLaw]"
							visible = "[Not( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER')) )]"
							MOS_reform_spacer = {
								datacontext = "[GuiLaw.GetLaw]"
								visible = "[EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW'))]"
							}
							layoutpolicy_horizontal = expanding	
							MOS_reform_button = {
								datacontext = "[GuiLaw.GetLaw]"
								visible = "[Not( Or( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')), EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER'))) )]"
								#visible = "[Not( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')) )]"
								enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
								down = "[GuiLaw.IsEnacted]"
								alwaystransparent = "[GuiLaw.IsEnacted]"
								onclick = "[GuiLaw.Enact]"
								tooltipwidget = { pass_law_tooltip = {} }
								using = tooltip_below
								
								
								
								MOS_reform_button = {
									visible = "[Not(GuiLaw.IsEnacted)]"
									texture = "[Law.GetIcon]"
									parentanchor = center
									alwaystransparent = yes
								}
								
								MOS_reform_icon = {
									# TODO: Swap for textures when you have them
									visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
									texture = "[Law.GetIcon]"
									parentanchor = center
									alwaystransparent = yes
									
									blockoverride "master_color_frame" {
										frame = 2
									}

									glow = {
										glow_radius = 6
										using = Glow_Standard
										using = Color_Bright_Yellow
									}
								}
								text_label_center = {
									parentanchor = center
									visible = "[Not( Or( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')), EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER'))) )]"
									text = "[GuiLaw.GetLaw.GetName]"
								}
							}
						}
					}
				}

				MOS_mil_reforms_background_hbox = {
					visible = "[GuiLawGroup.GetLawGroup.HasFlag( 'mos_no_order_reform' )]"
					margin = {5 0}
					layoutpolicy_horizontal = expanding	
					datamodel = "[GuiLawGroup.GetLaws]"
					item = {
						vbox = {
							datacontext = "[GuiLaw.GetLaw]"
							visible = "[Not( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER')) )]"
							MOS_reform_spacer = {
								datacontext = "[GuiLaw.GetLaw]"
								visible = "[EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW'))]"
							}
							layoutpolicy_horizontal = expanding	
							MOS_reform_button = {
								datacontext = "[GuiLaw.GetLaw]"
								visible = "[Not( Or( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')), EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER'))) )]"
								#visible = "[Not( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')) )]"
								enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
								down = "[GuiLaw.IsEnacted]"
								alwaystransparent = "[GuiLaw.IsEnacted]"
								onclick = "[GuiLaw.Enact]"
								tooltipwidget = { pass_law_tooltip = {} }
								using = tooltip_below
								
								
								
								MOS_reform_button = {
									visible = "[Not(GuiLaw.IsEnacted)]"
									texture = "[Law.GetIcon]"
									parentanchor = center
									alwaystransparent = yes
								}
								
								MOS_reform_icon = {
									# TODO: Swap for textures when you have them
									visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
									texture = "[Law.GetIcon]"
									parentanchor = center
									alwaystransparent = yes
									
									blockoverride "master_color_frame" {
										frame = 2
									}

									glow = {
										glow_radius = 6
										using = Glow_Standard
										using = Color_Bright_Yellow
									}
								}
								text_label_center = {
									parentanchor = center
									visible = "[Not( Or( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')), EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER'))) )]"
									text = "[GuiLaw.GetLaw.GetName]"
								}
							}
						}
					}
				}
				
				MOS_mil_reforms_colored_spacer = {
					#visible = "[GuiLawGroup.GetLawGroup.HasFlag( 'mos_minor_reform' )]"			
				}
			}
		}
	}

	type mos_economic_reforms_container = vbox {
		name = "mos_economic_reforms_major"
		datamodel = "[MyRealmWindow.GetRealmLaws]"
		ignoreinvisible = yes		
		layoutpolicy_horizontal = expanding		
		item = {
			vbox = {								
				datacontext = "[GuiLawGroup.GetLawGroup]"
				visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'mos_economic_reform' ), GuiLawGroup.IsAvailable)]"
				ignoreinvisible = yes
				layoutpolicy_horizontal = expanding	
				spacer = {
					visible = "[Not( GuiLawGroup.GetLawGroup.HasFlag( 'mos_minor_reform' ))]"
					size = { 0 30}
				}		
				
				text_label_center = {		
					visible = "[Not( GuiLawGroup.GetLawGroup.HasFlag( 'mos_minor_reform' ))]"									
					text = "[LawGroup.GetName]"
				}
				
				# spacer = {		
				# 	visible = "[GuiLawGroup.GetLawGroup.HasFlag( 'mos_minor_reform' )]"									
				# 	size = { 0 10 }
				# }
				MOS_econ_reforms_colored_spacer = {}
				
				MOS_econ_reforms_background_threaded_hbox = {
					visible = "[Not( GuiLawGroup.GetLawGroup.HasFlag( 'mos_no_order_reform' ))]"
					margin = {5 0}
					layoutpolicy_horizontal = expanding	
					datamodel = "[GuiLawGroup.GetLaws]"
					item = {
						vbox = {
							datacontext = "[GuiLaw.GetLaw]"
							visible = "[Not( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER')) )]"
							MOS_reform_spacer = {
								datacontext = "[GuiLaw.GetLaw]"
								visible = "[EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW'))]"
							}
							layoutpolicy_horizontal = expanding	
							MOS_reform_button = {
								datacontext = "[GuiLaw.GetLaw]"
								visible = "[Not( Or( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')), EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER'))) )]"
								#visible = "[Not( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')) )]"
								enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
								down = "[GuiLaw.IsEnacted]"
								alwaystransparent = "[GuiLaw.IsEnacted]"
								onclick = "[GuiLaw.Enact]"
								tooltipwidget = { pass_law_tooltip = {} }
								using = tooltip_below
								
								
								
								MOS_reform_button = {
									visible = "[Not(GuiLaw.IsEnacted)]"
									texture = "[Law.GetIcon]"
									parentanchor = center
									alwaystransparent = yes
								}
								
								MOS_reform_icon = {
									# TODO: Swap for textures when you have them
									visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
									texture = "[Law.GetIcon]"
									parentanchor = center
									alwaystransparent = yes
									
									blockoverride "master_color_frame" {
										frame = 2
									}

									glow = {
										glow_radius = 6
										using = Glow_Standard
										using = Color_Bright_Yellow
									}
								}
								text_label_center = {
									parentanchor = center
									visible = "[Not( Or( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')), EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER'))) )]"
									text = "[GuiLaw.GetLaw.GetName]"
								}
							}
						}
					}
				}

				MOS_econ_reforms_background_hbox = {
					visible = "[GuiLawGroup.GetLawGroup.HasFlag( 'mos_no_order_reform' )]"
					margin = {5 0}
					layoutpolicy_horizontal = expanding	
					datamodel = "[GuiLawGroup.GetLaws]"
					item = {
						vbox = {
							datacontext = "[GuiLaw.GetLaw]"
							visible = "[Not( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER')) )]"
							MOS_reform_spacer = {
								datacontext = "[GuiLaw.GetLaw]"
								visible = "[EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW'))]"
							}
							layoutpolicy_horizontal = expanding	
							MOS_reform_button = {
								datacontext = "[GuiLaw.GetLaw]"
								visible = "[Not( Or( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')), EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER'))) )]"
								#visible = "[Not( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')) )]"
								enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
								down = "[GuiLaw.IsEnacted]"
								alwaystransparent = "[GuiLaw.IsEnacted]"
								onclick = "[GuiLaw.Enact]"
								tooltipwidget = { pass_law_tooltip = {} }
								using = tooltip_below
								
								
								
								MOS_reform_button = {
									visible = "[Not(GuiLaw.IsEnacted)]"
									texture = "[Law.GetIcon]"
									parentanchor = center
									alwaystransparent = yes
								}
								
								MOS_reform_icon = {
									# TODO: Swap for textures when you have them
									visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
									texture = "[Law.GetIcon]"
									parentanchor = center
									alwaystransparent = yes
									
									blockoverride "master_color_frame" {
										frame = 2
									}

									glow = {
										glow_radius = 6
										using = Glow_Standard
										using = Color_Bright_Yellow
									}
								}
								text_label_center = {
									parentanchor = center
									visible = "[Not( Or( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')), EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER'))) )]"
									text = "[GuiLaw.GetLaw.GetName]"
								}
							}
						}
					}
				}
				
				MOS_econ_reforms_colored_spacer = {
					#visible = "[GuiLawGroup.GetLawGroup.HasFlag( 'mos_minor_reform' )]"			
				}
			}
		}
	}

	type mos_administrative_reforms_container = vbox {
		name = "mos_administrative_reforms_major"
		datamodel = "[MyRealmWindow.GetRealmLaws]"
		ignoreinvisible = yes		
		layoutpolicy_horizontal = expanding		
		item = {
			vbox = {								
				datacontext = "[GuiLawGroup.GetLawGroup]"
				visible = "[And(And( GuiLawGroup.GetLawGroup.HasFlag( 'mos_administrative_reform' ), GuiLawGroup.IsAvailable ), Not(And(EqualTo_string(LawGroup.GetName, Localize('mos_administrative_reforms_4_header')),And( Not(IsObserver),   GetScriptedGui('mos_spy_directives_locked').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)) )))]"
				ignoreinvisible = yes
				layoutpolicy_horizontal = expanding	
				spacer = {
					visible = "[Not( GuiLawGroup.GetLawGroup.HasFlag( 'mos_minor_reform' ))]"
					size = { 0 30}
				}		
				
				text_label_center = {		
					visible = "[Not( GuiLawGroup.GetLawGroup.HasFlag( 'mos_minor_reform' ))]"									
					text = "[LawGroup.GetName]"
				}
				
				# spacer = {		
				# 	visible = "[GuiLawGroup.GetLawGroup.HasFlag( 'mos_minor_reform' )]"									
				# 	size = { 0 10 }
				# }
				MOS_admin_reforms_colored_spacer = {}
				
				MOS_admin_reforms_background_threaded_hbox = {
					visible = "[Not( GuiLawGroup.GetLawGroup.HasFlag( 'mos_no_order_reform' ))]"
					margin = {5 0}
					layoutpolicy_horizontal = expanding	
					datamodel = "[GuiLawGroup.GetLaws]"
					item = {
						vbox = {
							datacontext = "[GuiLaw.GetLaw]"
							visible = "[Not( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER')) )]"
							MOS_reform_spacer = {
								datacontext = "[GuiLaw.GetLaw]"
								visible = "[EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW'))]"
							}
							layoutpolicy_horizontal = expanding	
							MOS_reform_button = {
								datacontext = "[GuiLaw.GetLaw]"
								visible = "[Not( Or( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')), EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER'))) )]"
								#visible = "[Not( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')) )]"
								enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
								down = "[GuiLaw.IsEnacted]"
								alwaystransparent = "[GuiLaw.IsEnacted]"
								onclick = "[GuiLaw.Enact]"
								tooltipwidget = { pass_law_tooltip = {} }
								using = tooltip_below
								
								
								
								MOS_reform_button = {
									visible = "[Not(GuiLaw.IsEnacted)]"
									texture = "[Law.GetIcon]"
									parentanchor = center
									alwaystransparent = yes
								}
								
								MOS_reform_icon = {
									# TODO: Swap for textures when you have them
									visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
									texture = "[Law.GetIcon]"
									parentanchor = center
									alwaystransparent = yes
									
									blockoverride "master_color_frame" {
										frame = 2
									}

									glow = {
										glow_radius = 6
										using = Glow_Standard
										using = Color_Bright_Yellow
									}
								}
								text_label_center = {
									parentanchor = center
									visible = "[Not( Or( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')), EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER'))) )]"
									text = "[GuiLaw.GetLaw.GetName]"
								}
							}
						}
					}
				}

				MOS_admin_reforms_background_hbox = {
					visible = "[GuiLawGroup.GetLawGroup.HasFlag( 'mos_no_order_reform' )]"
					margin = {5 0}
					layoutpolicy_horizontal = expanding	
					datamodel = "[GuiLawGroup.GetLaws]"
					item = {
						vbox = {
							datacontext = "[GuiLaw.GetLaw]"
							visible = "[Not( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER')) )]"
							MOS_reform_spacer = {
								datacontext = "[GuiLaw.GetLaw]"
								visible = "[EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW'))]"
							}
							layoutpolicy_horizontal = expanding	
							MOS_reform_button = {
								datacontext = "[GuiLaw.GetLaw]"
								visible = "[Not( Or( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')), EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER'))) )]"
								#visible = "[Not( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')) )]"
								enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
								down = "[GuiLaw.IsEnacted]"
								alwaystransparent = "[GuiLaw.IsEnacted]"
								onclick = "[GuiLaw.Enact]"
								tooltipwidget = { pass_law_tooltip = {} }
								using = tooltip_below
								
								
								
								MOS_reform_button = {
									visible = "[Not(GuiLaw.IsEnacted)]"
									texture = "[Law.GetIcon]"
									parentanchor = center
									alwaystransparent = yes
								}
								
								MOS_reform_icon = {
									# TODO: Swap for textures when you have them
									visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
									texture = "[Law.GetIcon]"
									parentanchor = center
									alwaystransparent = yes
									
									blockoverride "master_color_frame" {
										frame = 2
									}

									glow = {
										glow_radius = 6
										using = Glow_Standard
										using = Color_Bright_Yellow
									}
								}
								text_label_center = {
									parentanchor = center
									visible = "[Not( Or( EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW')), EqualTo_string(Law.GetNameNoTooltip, Localize('MOS_NULL_LAW_NO_SPACER'))) )]"
									text = "[GuiLaw.GetLaw.GetName]"
								}
							}
						}
					}
				}
				
				MOS_admin_reforms_colored_spacer = {
					#visible = "[GuiLawGroup.GetLawGroup.HasFlag( 'mos_minor_reform' )]"			
				}
			}
		}
	}
}